{"version":3,"sources":["Components/Statistics.js","Components/FeedbackOptions.js","Components/Section.js","Components/Notification.js","Components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Math","floor","FeedbackOptions","handleClickButton","onClick","Section","title","children","Notification","message","App","state","type","setState","prevState","countTotalFeedback","Object","values","reduce","item","countPositiveFeedbackPercentage","positiveFeedback","this","positiveFeedbacks","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAceA,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,oDACgC,IAAVA,EAAcE,KAAKC,MAAMF,GAAsB,EADrE,WCEWG,EARS,SAAC,GAAD,IAAGC,EAAH,EAAGA,kBAAH,OACtB,qCACE,wBAAQC,QAAS,kBAAMD,EAAkB,SAAzC,kBACA,wBAAQC,QAAS,kBAAMD,EAAkB,YAAzC,qBACA,wBAAQC,QAAS,kBAAMD,EAAkB,QAAzC,qBCGWE,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MCGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,4BAAIA,OC0COC,E,4MAtCXC,MAAQ,CACJhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETM,kBAAoB,SAAAS,GAChB,EAAKC,UAAS,SAAAC,GACV,OAAO,eACFF,EAAOE,EAAUF,GAAQ,O,EAItCG,mBAAqB,WACjB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACpB,EAAOqB,GAAR,OAAiBrB,EAASqB,IAAM,I,EAE5EC,gCAAkC,SAACtB,EAAOuB,GACtC,OAAQA,EAAmBvB,EAAQ,K,uDAGnC,IAAMA,EAAQwB,KAAKP,qBACbQ,EAAoBD,KAAKF,gCAAgCtB,EAAOwB,KAAKX,MAAMhB,MACjF,OACI,gCACI,cAAC,EAAD,CAASW,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBH,kBAAmBmB,KAAKnB,sBAE7C,cAAC,EAAD,CAASG,MAAM,aAAf,SACe,IAAVR,EAEG,cAAC,EAAD,CAAYH,KAAM2B,KAAKX,MAAMhB,KAAMC,QAAS0B,KAAKX,MAAMf,QAASC,IAAKyB,KAAKX,MAAMd,IAAKC,MAAOA,EAAOC,mBAAoBwB,IAEvH,cAAC,EAAD,CAAcd,QAAQ,+B,GAhC5Be,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8581f3a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p>Good:{good}</p>\r\n    <p>Neutral:{neutral}</p>\r\n    <p>Bad:{bad}</p>\r\n    <p>Total:{total}</p>\r\n    <p>\r\n      Positive feedback: {total !== 0 ? Math.floor(positivePercentage) : 0}%\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst FeedbackOptions = ({ handleClickButton }) => (\r\n  <>\r\n    <button onClick={() => handleClickButton('good')}>Good</button>\r\n    <button onClick={() => handleClickButton('neutral')}>Neutral</button>\r\n    <button onClick={() => handleClickButton('bad')}>Bad</button>\r\n  </>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <p>{message}</p>\r\n  </>\r\n);\r\n\r\nexport default Notification;\r\n","import React from 'react'\r\nimport Statistics from './Statistics'\r\nimport FeedbackOptions from './FeedbackOptions'\r\nimport Section from './Section'\r\nimport Notification from './Notification'\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n    handleClickButton = type => {\r\n        this.setState(prevState => {\r\n            return {\r\n                [type]: prevState[type] + 1,\r\n            }\r\n        })\r\n    }\r\n    countTotalFeedback = () => {\r\n        return Object.values(this.state).reduce((total, item) => total += item, 0);\r\n    }\r\n    countPositiveFeedbackPercentage = (total, positiveFeedback) => {\r\n        return (positiveFeedback / total * 100);\r\n    }\r\n    render() {\r\n        const total = this.countTotalFeedback();\r\n        const positiveFeedbacks = this.countPositiveFeedbackPercentage(total, this.state.good)\r\n        return (\r\n            <div>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions handleClickButton={this.handleClickButton} ></FeedbackOptions>\r\n                </Section>\r\n                <Section title=\"Statistics\">\r\n                    {total !== 0\r\n                        ?\r\n                        <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={total} positivePercentage={positiveFeedbacks} />\r\n                        :\r\n                        <Notification message=\"No feedback given\" />\r\n                    }\r\n                </Section> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}