{"version":3,"sources":["Components/Statistics.js","Components/FeedbackOptions.js","Components/Section.js","Components/Notification.js","Components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Math","floor","FeedbackOptions","options","handleClickButton","map","elem","onClick","Section","title","children","Notification","message","App","state","type","setState","prevState","countTotalFeedback","Object","values","reduce","item","countPositiveFeedbackPercentage","positiveFeedback","this","positiveFeedbacks","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAceA,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,qDACgC,IAAVA,EAAcE,KAAKC,MAAMF,GAAsB,EADrE,WCIWG,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,kBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,wBAAmBC,QAAS,kBAAMH,EAAkBE,IAApD,SACGA,GADUA,SCIJE,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MCDUC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC6D3BC,E,4MAxDbC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,kBAAoB,SAAAW,GAClB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAOE,EAAUF,GAAQ,O,EAKhCG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAC/B,SAACvB,EAAOwB,GAAR,OAAkBxB,EAASwB,IAC3B,I,EAIJC,gCAAkC,SAACzB,EAAO0B,GACxC,OAAQA,EAAmB1B,EAAS,K,uDAIpC,IAAMA,EAAQ2B,KAAKP,qBACbQ,EAAoBD,KAAKF,gCAC7BzB,EACA2B,KAAKX,MAAMnB,MAEb,OACE,gCACE,cAAC,EAAD,CAASc,MAAM,wBAAf,SACE,cAAC,EAAD,CACEN,QAAS,CAAC,OAAQ,MAAO,WACzBC,kBAAmBqB,KAAKrB,sBAG5B,cAAC,EAAD,CAASK,MAAM,aAAf,SACa,IAAVX,EACC,cAAC,EAAD,CACEH,KAAM8B,KAAKX,MAAMnB,KACjBC,QAAS6B,KAAKX,MAAMlB,QACpBC,IAAK4B,KAAKX,MAAMjB,IAChBC,MAAOA,EACPC,mBAAoB2B,IAGtB,cAAC,EAAD,CAAcd,QAAQ,+B,GAlDhBe,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c653900a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul>\r\n    <li>Good:{good}</li>\r\n    <li>Neutral:{neutral}</li>\r\n    <li>Bad:{bad}</li>\r\n    <li>Total:{total}</li>\r\n    <li>\r\n      Positive feedback: {total !== 0 ? Math.floor(positivePercentage) : 0}%\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst FeedbackOptions = ({ options, handleClickButton }) => (\r\n  <>\r\n    {options.map(elem => (\r\n      <button key={elem} onClick={() => handleClickButton(elem)}>\r\n        {elem}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleClickButton = type => {\r\n    this.setState(prevState => {\r\n      return {\r\n        [type]: prevState[type] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce(\r\n      (total, item) => (total += item),\r\n      0,\r\n    );\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (total, positiveFeedback) => {\r\n    return (positiveFeedback / total) * 100;\r\n  };\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const positiveFeedbacks = this.countPositiveFeedbackPercentage(\r\n      total,\r\n      this.state.good,\r\n    );\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={['good', 'bad', 'neutral']}\r\n            handleClickButton={this.handleClickButton}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total !== 0 ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={total}\r\n              positivePercentage={positiveFeedbacks}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}